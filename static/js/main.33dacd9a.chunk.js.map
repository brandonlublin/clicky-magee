{"version":3,"sources":["components/GameCard/index.js","components/Wrapper/index.js","components/Footer/Footer.js","components/Navbar/Nav.js","components/Header/Header.js","components/Scoreboard/Scoreboard.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","alt","name","src","image","id","value","onClick","Wrapper","children","Footer","href","NavTabs","Navbar_default","bg","expand","Brand","Nav_default","Header","Scoreboard","score","topScore","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffle","arr","j","x","i","length","Math","floor","random","rndDisplayOrder","shuffleCards","friends","newOrder","push","setState","imgDisplayOrder","handleReset","currentScore","state","winlossmessage","clicked","handleShuffle","handleClick","event","newClickedImage","target","console","log","clickedImage","setHighscore","_this2","Navbar_Nav","Scoreboard_Scoreboard","Header_Header","components_Wrapper","map","friend","components_GameCard","key","Footer_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.33dacd9a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./gamecardstyle.css\";\n\nfunction GameCard(props) {\n  return (\n    <div className=\"card\">\n      <img className='cardImage' alt={props.name} src={props.image} id={props.id} value={props.id} onClick={props.onClick}/>\n    </div>\n  );\n}\n\nexport default GameCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport \"./footerstyle.css\";\n\nfunction Footer() {\n    return (\n    <div className='footerMain page-footer font-small blue'>\n        <div className=\"footer-copyright text-center py-3\">Â© 2019 Copyright:\n            <a href=\"https://brandonlublin.com/\"> Brandon Lublin</a>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./navstyle.css\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\n\nfunction NavTabs() {\n    return (\n    <Navbar bg=\"Light\" expand=\"lg\">\n        <Navbar.Brand className='logo' href=\"#home\">Clicky Magee</Navbar.Brand>\n\n        <Nav className=\"mr-auto\">\n        </Nav>\n    </Navbar>\n    );\n}\n\nexport default NavTabs;\n","import React from 'react';\n\nfunction Header() {\n    return (\n    <div className='container'>\n        <hr className='my-4'></hr>\n        <div className='jumbotron-fluid'>\n            <h2 className='display-5 text-center'>Clicky Magee, The Best Match Game of the Century!</h2>\n            <p className='lead text-center'>Click on a Landmark to earn points, but don't click a Landmark more than once, or your score will reset!!</p>\n            <hr className='my-4'></hr>\n        </div>\n    </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport \"./scoreboard.css\";\n\nfunction Scoreboard(props) {\n    return (\n        <div className=\"nav-item scoreboard\">\n            Score: {props.score} |\n            Highest Score: {props.topScore}\n        </div>\n    )\n}\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport GameCard from './components/GameCard';\nimport Wrapper from './components/Wrapper';\nimport friends from './gamecards.json';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport NavBar from \"./components/Navbar/Nav\";\nimport Header from './components/Header/Header';\nimport Scoreboard from './components/Scoreboard/Scoreboard';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            friends: friends,\n            currentScore: 0,\n            topScore: 0,\n            winlossmessage: \"You Lose! Try again.\",\n            imgDisplayOrder: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n            clicked: []\n        }\n    }\n\n    shuffle = (arr) => {\n        let j, x, i;\n        for (i = arr.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            x = arr[i];\n            arr[i] = arr[j];\n            arr[j] = x;\n        }\n        return arr;\n    }\n\n    rndDisplayOrder = () => {\n        let shuffleCards = this.shuffle(friends)\n        let newOrder = []\n        for (let i = 0; i < 15; i++) {\n            newOrder.push(shuffleCards[i].id)\n        }\n        this.setState({ imgDisplayOrder: newOrder })\n    }\n\n    handleReset = () => {\n        this.setState({\n            currentScore: 0,\n            topScore: this.state.topScore,\n            winlossmessage: \"\",\n            clicked: []\n        });\n        this.handleShuffle();\n    };\n\n    handleClick = event => {\n        let newClickedImage = [];\n        newClickedImage.push(event.target.id)\n        this.setState ({\n            currentScore: this.state.currentScore + 1,\n            winlossmessage: \"\",\n            clicked: newClickedImage\n        });\n        console.log(this.state.clickedImage);\n        \n        this.rndDisplayOrder();\n    }\n\n\n    setHighscore = () => {\n        if (this.state.currentScore > this.state.topScore) {\n            this.setState({\n                topScore: this.state.currentScore\n            })\n        }\n    }\n\n    render() {\n        return (\n        <div>\n            <NavBar />\n            <Scoreboard\n                score={this.state.currentScore}\n                topScore={this.state.topScore}\n                winlossmessage={this.state.winlossmessage} />\n            <Header />\n            <Wrapper>\n                {this.state.friends.map(friend => (\n                    <GameCard\n                        image={friend.image}\n                        key={friend.id}\n                        id={friend.id}\n                        name={friend.name}\n                        onClick={this.handleClick}\n                    />\n                ))}\n            </Wrapper>\n            <Footer />\n        </div>\n        )\n    }\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}